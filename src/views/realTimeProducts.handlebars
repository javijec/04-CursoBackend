<div class="container py-5">
    <h1 class="text-center mb-5">Gestión de Productos en Tiempo Real</h1>

    <div class="row mb-5">
        <div class="col-md-6 mx-auto">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h2 class="h5 mb-0">Agregar Nuevo Producto</h2>
                </div>
                <div class="card-body">
                    <form id="productForm">
                        <div class="mb-3">
                            <input type="text" class="form-control" name="title" placeholder="Producto" required>
                        </div>
                        <div class="mb-3">
                            <input type="text" class="form-control" name="description" placeholder="Descripción"
                                required>
                        </div>
                        <div class="mb-3">
                            <input type="text" class="form-control" name="code" placeholder="Código" required>
                        </div>
                        <div class="mb-3">
                            <input type="number" class="form-control" name="price" placeholder="Precio" required>
                        </div>
                        <div class="mb-3">
                            <input type="number" class="form-control" name="stock" placeholder="Stock" required>
                        </div>
                        <div class="mb-3">
                            <input type="text" class="form-control" name="category" placeholder="Categoría" required>
                        </div>
                        <div class="mb-3">
                            <input type="text" class="form-control" name="thumbnails" placeholder="Thumbnails" required>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Agregar Producto</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-6 mx-auto">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h2 class="h5 mb-0">Eliminar Productos</h2>
                </div>
                <div class="card-body">
                    <form id="deleteForm">
                        <div class="mb-3">
                            <input type="String" class="form-control" name="pid" placeholder="ID del Producto" required>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Eliminar Producto</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 mb-4">
            <div class="card shadow h-100">
                <div class="card-header bg-primary text-white">
                    <h2 class="h5 mb-0">Productos Existentes</h2>
                </div>
                <div class="card-body">
                    <div id="productList" class="list-group list-group-flush">
                        {{#each products}}
                        <div class="list-group-item">
                            <span>{{this.title}} - ID: {{this._id}} - DESCRIPTION: {{this.description}}</span>
                        </div>
                        {{/each}}
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card shadow h-100">
                <div class="card-header bg-success text-white">
                    <h2 class="h5 mb-0">Productos Agregados</h2>
                </div>
                <div class="card-body">
                    <ul id="productAddedList" class="list-group list-group-flush"></ul>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card shadow h-100">
                <div class="card-header bg-danger text-white">
                    <h2 class="h5 mb-0">Productos Eliminados</h2>
                </div>
                <div class="card-body">
                    <ul id="productDeletedList" class="list-group list-group-flush"></ul>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOJw3ynWuhO"
    crossorigin="anonymous"></script>

<script>
    const socketClient = io();
    const productList = document.getElementById('productList');
    const productAddedList = document.getElementById('productAddedList');
    const productDeletedList = document.getElementById('productDeletedList');
    const productForm = document.getElementById('productForm');
    const deleteForm = document.getElementById('deleteForm');

    // Eventos de Socket.IO
    socketClient.on('products', data => {
        updateProductList(data);
    });

    socketClient.on('new_product', data => {
        addProductToAddedList(data);
    });

    socketClient.on('delete_product', data => {
        addProductToDeletedList(data);
    });

    socketClient.on('error', data => {
        console.error('Error:', data.message);
    });

    // Funciones de actualización del DOM
    function updateProductList(products) {
        productList.innerHTML = '';
        products.forEach(product => {
            productList.innerHTML += `
            <div class="list-group-item">
                <span>${product.title} - ID: ${product._id} - DESCRIPTION: ${product.description}</span>
            </div>
        `;
        });
    }

    function addProductToAddedList(product) {
        productAddedList.innerHTML += `
        <li class="list-group-item">
            <span>${product.title} - ID: ${product._id}</span>
        </li>
    `;
    }

    function addProductToDeletedList(productId) {
        productDeletedList.innerHTML += `
        <li class="list-group-item">
            <span>ID: ${productId}</span>
        </li>
    `;
    }

    // Manejador del formulario de agregar producto
    productForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = new FormData(e.target);
        const productData = {
            title: formData.get('title'),
            description: formData.get('description'),
            code: formData.get('code'),
            price: Number(formData.get('price')),
            stock: Number(formData.get('stock')),
            category: formData.get('category'),
            thumbnails: formData.get('thumbnails')
        };

        try {
            const response = await fetch('/api/products', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(productData)
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            // El socket se encargará de actualizar la UI
            socketClient.emit('add_product', productData);
            e.target.reset();
        } catch (error) {
            console.error('Error al añadir el producto:', error);
        }
    });

    // Manejador del formulario de eliminar producto
    deleteForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const formData = new FormData(e.target);
        const productId = formData.get('pid');

        try {
            const response = await fetch(`/api/products/${productId}`, {
                method: 'DELETE'
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            // El socket se encargará de actualizar la UI
            socketClient.emit('delete_product', productId);
            e.target.reset();
        } catch (error) {
            console.error('Error al eliminar el producto:', error);
        }
    });
</script>