    <div class="container py-5">
        <h1 class="text-center mb-5">Gestión de Productos en Tiempo Real</h1>
        
        <div class="row mb-5">
            <div class="col-md-6 mx-auto">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h2 class="h5 mb-0">Agregar Nuevo Producto</h2>
                    </div>
                    <div class="card-body">
                        <form id="productForm">
                            <div class="mb-3">
                                <input type="text" class="form-control" name="title" placeholder="Producto" required>
                            </div>
                            <div class="mb-3">
                                <input type="text" class="form-control" name="description" placeholder="Descripción" required>
                            </div>
                            <div class="mb-3">
                                <input type="text" class="form-control" name="code" placeholder="Código" required>
                            </div>
                            <div class="mb-3">
                                <input type="number" class="form-control" name="price" placeholder="Precio" required>
                            </div>
                            <div class="mb-3">
                                <input type="number" class="form-control" name="stock" placeholder="Stock" required>
                            </div>
                            <div class="mb-3">
                                <input type="text" class="form-control" name="category" placeholder="Categoría" required>
                            </div>
                            <div class="mb-3">
                                <input type="text" class="form-control" name="thumbnails" placeholder="Thumbnails" required>
                            </div>
                            <button type="submit" class="btn btn-primary w-100">Agregar Producto</button>
                        </form>
                    </div>
                </div>
            </div>
                        <div class="col-md-6 mx-auto">
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h2 class="h5 mb-0"> Eliminar Productos</h2>
                    </div>
                    <div class="card-body">
                        <form id="deleteForm">
                            <div class="mb-3">
                                <input type="number" class="form-control" name="pid" placeholder="Producto" required>
                            </div>
                            <button type="submit" class="btn btn-primary w-100">Eliminar Producto</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-md-4 mb-4">
                <div class="card shadow h-100">
                    <div class="card-header bg-primary text-white">
                        <h2 class="h5 mb-0">Productos Existentes</h2>
                    </div>
                    <div class="card-body">
                        <div id="productList" class="list-group list-group-flush">
                            {{#each products}}
                                <div class="list-group-item">
                                    <span>{{this.title}} - ID: {{this.id}} - DESCRIPTION: {{this.description}}</span>
                                </div>
                            {{/each}}
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="card shadow h-100">
                    <div class="card-header bg-success text-white">
                        <h2 class="h5 mb-0">Productos Agregados</h2>
                    </div>
                    <div class="card-body">
                        <ul id="productAddedList" class="list-group list-group-flush"></ul>
                    </div>
                </div>
            </div>
            <div class="col-md-4 mb-4">
                <div class="card shadow h-100">
                    <div class="card-header bg-danger text-white">
                        <h2 class="h5 mb-0">Productos Eliminados</h2>
                    </div>
                    <div class="card-body">
                        <ul id="productDeletedList" class="list-group list-group-flush"></ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
<script src="https://cdn.socket.io/4.7.5/socket.io.min.js"
    integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO"
    crossorigin="anonymous"></script>
<script type="module">
    const url = '';
    const options = {};
    const productList = document.getElementById('productList');
    const productAddedList = document.getElementById('productAddedList');
    const productDeletedList = document.getElementById('productDeletedList');
    const socketClient = io(url, options);

    socketClient.on('connect', async () => {
        socketClient.emit('new_user_data', {});
    });

    socketClient.on('new_product', data => {
        console.log(data);
        productAddedList.innerHTML += `<div><span>${data.title}-ID: ${data.id}</span></div>`;
    });

    socketClient.on('delete_product', data => {
        console.log(data);
        productDeletedList.innerHTML += `<div><span>ID:${data}</span></div>`;
    });

    socketClient.on('products', data => {
        console.log(data);
        productList.innerHTML = '';
        data.forEach(product => {
            productList.innerHTML += `<div>TITLE:${product.title}- ID: ${product.id}- DESCRIPTION:${product.description}</div>`;
        });
    });
</script>
<script type="module">
    document.getElementById('productForm').addEventListener('submit', async (e) => {
        e.preventDefault(); // Previene la recarga de la página

        const formData = new FormData(e.target);
        const productData = {
            title: formData.get('title'),
            description: formData.get('description'),
            code: formData.get('code'),
            price: formData.get('price'),
            stock: formData.get('stock'),
            category: formData.get('category'),
            thumbnails: formData.get('thumbnails')
        };
        try {
            const response = await fetch('/api/products', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(productData)
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const result = await response.json();

            // Limpiar el formulario después de un envío exitoso
            e.target.reset();
        } catch (error) {
            console.error('Error al añadir el producto:', error);
        }
    });

    document.getElementById('deleteForm').addEventListener('submit', async (e) => {
        e.preventDefault(); // Previene la recarga de la página

        const formData = new FormData(e.target);
        const productData = {
            pid: formData.get('pid')
        };

        try {
            const response = await fetch('/api/products/' + productData.pid, {
                method: 'DELETE'
            });

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const result = await response.json();
            console.log('Producto eliminado:', result);

            // Limpiar el formulario después de un envío exitoso
            e.target.reset();
        } catch (error) {
            console.error('Error al añadir el producto:', error);
        }
    });
</script>